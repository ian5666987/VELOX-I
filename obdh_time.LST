C51 COMPILER V9.02   OBDH_TIME                                                             06/02/2013 18:25:56 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE OBDH_TIME
OBJECT MODULE PLACED IN obdh_time.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE obdh_time.c LARGE OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          // code by ntu ael
   2          
   3          #include <stdio.h>
   4          
   5          #include "obdh_globalvariables.h"
   6          #include "obdh_timer.h"
   7          #include "obdh_time.h"
   8          
   9          unsigned short rev_period = 6000; // assuming 100 minutes per revolution for now
  10          unsigned short rev_time_elapsed = 0; // there is no time elapse for the revolution yet
  11          float rev_no = 1.0000; // we start from orbit 1
  12          
  13          void Time_rev_update() { // must be called (periodically) within 127 seconds
  14   1        static unsigned char sec_prev = 0;
  15   1        unsigned char sec_now = uptime.tai_time;
  16   1        char delta = sec_now - sec_prev;
  17   1      
  18   1        unsigned short rev_no_int = rev_no;
  19   1        float fraction_no;
  20   1        if (0 < delta) {
  21   2          rev_time_elapsed += delta;
  22   2          sec_prev = sec_now;
  23   2          fraction_no = (float) rev_time_elapsed / (float) rev_period;
  24   2          if (fraction_no >= 1.0)
  25   2            rev_time_elapsed -= rev_period;
  26   2          rev_no = (float) rev_no_int + fraction_no;
  27   2        }
  28   1      }
  29          
  30          void Time_rev_set(float rev_input) {
  31   1        float fraction_no;
  32   1        unsigned short rev_no_int;
  33   1        rev_no = rev_input >= 1.0000 ? rev_input : 1.0000;
  34   1        rev_no_int = rev_no;
  35   1        fraction_no = rev_no - (float) rev_no_int;
  36   1        rev_time_elapsed = fraction_no * rev_period;
  37   1      }
  38          
  39          float Time_rev_get() {
  40   1        Time_rev_update();
  41   1        return rev_no;
  42   1      }
  43          
  44          void Time_rev_period_set(unsigned short rev_period_ref) {
  45   1        rev_period = rev_period_ref;
  46   1      }
  47          
  48          unsigned short Time_rev_period_get() {
  49   1        return rev_period;
  50   1      }
  51          
  52          char Time_revHandler() { //use last saved rev_no as a comparison, compare with the current orbit, return t
             -he change
  53   1        static float last_rev_no = 0;
  54   1        float current_rev_no = Time_rev_get();
C51 COMPILER V9.02   OBDH_TIME                                                             06/02/2013 18:25:56 PAGE 2   

  55   1        char no_of_rev_changed = (short) current_rev_no - (short) last_rev_no; //to get integer changes
  56   1        last_rev_no = current_rev_no; //update the last time called revolution no
  57   1        return no_of_rev_changed;
  58   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    565    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     38    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
