C51 COMPILER V9.02   OBDH_TIMER                                                            05/20/2014 11:03:52 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE OBDH_TIMER
OBJECT MODULE PLACED IN obdh_timer.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE obdh_timer.c LARGE OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          // code by ntu ael
   2          
   3          #define interrupt(x) interrupt x
   4          
   5          #include <c8051F120.h>
   6          
   7          #include "Velox_clock.h"
   8          
   9          #include "obdh_systemconfig.h"
  10          #include "obdh_timer.h"
  11          
  12          sfr16 RCAP2 = 0xCA; //Timer 2 reload register
  13          sfr16 TMR2 = 0xCC; //Timer 2 register
  14          
  15          // Timer 0 Initialization
  16          // This function configures the Timer0 as a 16-bit timer, interrupt enabled.
  17          // Using the Ext osc. at 28636360Hz or INT osc at 24.5MHz (for prescaling, refer to
  18          // definitions at top of script)
  19          // Timer0 will overflow every 1ms, triggering ISR
  20          // Note: The Timer0 uses a 1:12 prescaler for high gear and 1:1 for low gear.
  21          #define DESIRED_NO_OF_INT_PER_SECOND 100000L
  22          void Timer0_init(long sys_clk, char p_c_CKCON) {
  23   1        char SFRPAGE_SAVE = SFRPAGE;
  24   1        unsigned char timer0_reload;
  25   1      
  26   1        SFRPAGE = TIMER01_PAGE;
  27   1      
  28   1        timer0_reload = (sys_clk > 30000000L) ? sys_clk / 12 / DESIRED_NO_OF_INT_PER_SECOND + 0.5 : sys_clk / DE
             -SIRED_NO_OF_INT_PER_SECOND + 0.5;
  29   1      
  30   1        TH0 = -(timer0_reload); // ian 20130731: Apparently, OBDH does not use timer0! The values are to generat
             -e interrupts every 10us
  31   1        TL0 = -(timer0_reload);
  32   1      
  33   1        //TMOD: Timer Mode Register
  34   1        //Bit 7: GATE1: Timer 1 Gate Control.
  35   1        //0: Timer 1 enabled when TR1 = 1 irrespective of INT1_N logic level.
  36   1        //1: Timer 1 enabled only when TR1 = 1 AND INT1_N = logic 1.
  37   1      
  38   1        //Bit 6: C/T1: Counter/Timer 1 Select.
  39   1        //0: Timer Function: Timer 1 incremented by clock defined by T1M bit (CKCON.4).
  40   1        //1: Counter Function: Timer 1 incremented by high-to-low transitions on external input pin (T1).
  41   1      
  42   1        //Bits 5–4: T1M1–T1M0: Timer 1 Mode Select.
  43   1        //These bits select the Timer 1 operation mode.
  44   1        //T1M1  T1M0  Mode
  45   1        //0   0   Mode 0: 13-bit counter/timer
  46   1        //0   1   Mode 1: 16-bit counter/timer
  47   1        //1   0   Mode 2: 8-bit counter/timer with auto-reload
  48   1        //1   1   Mode 3: Timer 1 inactive
  49   1      
  50   1        //Bit 3: GATE0: Timer 0 Gate Control.
  51   1        //0: Timer 0 enabled when TR0 = 1 irrespective of /INT0 logic level.
  52   1        //1: Timer 0 enabled only when TR0 = 1 AND /INT0 = logic 1.
  53   1      
C51 COMPILER V9.02   OBDH_TIMER                                                            05/20/2014 11:03:52 PAGE 2   

  54   1        //Bit 2: C/T0: Counter/Timer Select.
  55   1        //0: Timer Function: Timer 0 incremented by clock defined by T0M bit (CKCON.3).
  56   1        //1: Counter Function: Timer 0 incremented by high-to-low transitions on external input pin (T0).
  57   1      
  58   1        //Bits 1–0: T0M1–T0M0: Timer 0 Mode Select.
  59   1        //These bits select the Timer 0 operation mode.
  60   1        //T0M1  T0M0  Mode
  61   1        //0   0   Mode 0: 13-bit counter/timer
  62   1        //0   1   Mode 1: 16-bit counter/timer
  63   1        //1   0   Mode 2: 8-bit counter/timer with auto-reload
  64   1        //1   1   Mode 3: Two 8-bit counter/timers
  65   1      
  66   1        //Timer0 in 8-bit counter/timer with auto-reload
  67   1        //Timer1 settings are retained
  68   1        TMOD &= 0xF0;
  69   1        TMOD |= 0x02;
  70   1      
  71   1        //CKCON : Clock Control
  72   1        //Bits 7–5: UNUSED. Read = 000b, Write = don’t care.
  73   1        //Bit 4: T1M: Timer 1 Clock Select.
  74   1        //This select the clock source supplied to Timer 1. T1M is ignored when C/T1 is set to logic 1.
  75   1        //0: Timer 1 uses the clock defined by the prescale bits, SCA1–SCA0.
  76   1        //1: Timer 1 uses the system clock.
  77   1        //Bit 3: T0M: Timer 0 Clock Select.
  78   1        //This bit selects the clock source supplied to Timer 0. T0M is ignored when C/T0 is set to logic 1.
  79   1        //0: Counter/Timer 0 uses the clock defined by the prescale bits, SCA1-SCA0.
  80   1        //1: Counter/Timer 0 uses the system clock.
  81   1        //Bit 2: UNUSED. Read = 0b, Write = don’t care.
  82   1        //Bits 1–0: SCA1–SCA0: Timer 0/1 Prescale Bits
  83   1        //These bits control the division of the clock supplied to Timer 0 and/or Timer 1 if configured to use p
             -rescaled clock inputs.
  84   1        //SCA1  SCA0  Prescaled Clock
  85   1        //0   0   System clock divided by 12
  86   1        //0   1   System clock divided by 4
  87   1        //1   0   System clock divided by 48
  88   1        //1   1   External clock divided by 8
  89   1      
  90   1        CKCON = p_c_CKCON;
  91   1        ET0 = 0; // Interrupt disabled
  92   1        TR0 = 1; // Timer0 ON
  93   1        SFRPAGE = SFRPAGE_SAVE;
  94   1      }
  95          
  96          // Timer2_Init
  97          // function: auto reload mode with no interrupt, not running
  98          // ian 20130215 - Timer2 interrupt is now used to produce periodical interrupt
  99          // the periodical interrupt is used for timing, the timing is used for scheduler
 100          #define DESIRED_TIMER2_INT_PERIOD_MS 1 //must be changed
 101          #define TIMER2_PRESCALER 12 //choice: 1, 2, 12, 8 + external clock
 102          void Timer2_init(long sys_clk) {
 103   1        char SFRPAGE_SAVE = SFRPAGE; // Save Current SFR page
 104   1        SFRPAGE = TMR2_PAGE;
 105   1        TMR2CN = 0x00; // Timer2 external enable off;
 106   1                       // Timer2 in timer mode;
 107   1        // Transactions on T2EX ignored
 108   1        // Timer2 in auto-reload mode
 109   1        // Timer2 output not available on pin T2
 110   1        // Timer2 counts up
 111   1        TMR2CF = 0x00;
 112   1      
 113   1      #if (TIMER2_PRESCALER == 12)
 114   1      #elif (TIMER2_PRESCALER == 1)
C51 COMPILER V9.02   OBDH_TIMER                                                            05/20/2014 11:03:52 PAGE 3   

                TMR2CF |= 0x08; // Timer2 uses sysclk
              #elif (TIMER2_PRESCALER == 2)
                TMR2CF |= 0x18; // Timer2 uses sysclk/2
              #elif (TIMER2_PRESCALER == 8) //Assume external clock is used
                TMR2CF |= 0x10;// external clock/8
              #else //Assume pre-scaler 12 is used
              #endif
 122   1      
 123   1        RCAP2 = -(sys_clk / TIMER2_PRESCALER / 1000 * DESIRED_TIMER2_INT_PERIOD_MS); // Timer2 value is set that
             - its interrupt could be called every 1ms
 124   1        TMR2 = RCAP2; // ~25ms (for SMBus low timeout detect)
 125   1        ET2 = 1; // timer 2 interrupt is enabled
 126   1        TR2 = 1; // start Timer2
 127   1        SFRPAGE = SFRPAGE_SAVE; // Restore SFR page detector
 128   1      }
 129          
 130          Timer2_ISR() interrupt (5) { // page 155
 131   1        TF2 = 0; // Clear Timer2 interrupt-pending flag
 132   1        Clock_interruptCallback();
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    332    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     12    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
